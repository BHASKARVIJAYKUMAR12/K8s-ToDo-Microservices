# API Gateway Deployment
apiVersion: v1
kind: ConfigMap
metadata:
  name: api-gateway-config
  namespace: todo-app
data:
  PORT: "8080"
  NODE_ENV: "production"
  TODO_SERVICE_URL: "http://todo-service:3001"
  USER_SERVICE_URL: "http://user-service:3002"
  NOTIFICATION_SERVICE_URL: "http://notification-service:3003"
  # CORS - Allow frontend service and localhost (for port-forward access)
  ALLOWED_ORIGINS: "http://frontend-service,http://frontend-service:80,http://localhost:3000"
---
apiVersion: v1
kind: Secret
metadata:
  name: api-gateway-secret
  namespace: todo-app
type: Opaque
stringData:
  JWT_SECRET: "local-dev-secret-key-change-in-production"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: todo-app
  labels:
    app: api-gateway
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
        - name: api-gateway
          image: api-gateway:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
              name: http
          envFrom:
            - configMapRef:
                name: api-gateway-config
            - secretRef:
                name: api-gateway-secret
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway-service
  namespace: todo-app
  labels:
    app: api-gateway
spec:
  selector:
    app: api-gateway
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
  type: ClusterIP
