# Docker Compose configuration for Todo App Microservices
# SECURITY WARNING: Change all default passwords and secrets before production use!
services:
  # Database Services
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: todoapp
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password # CHANGE IN PRODUCTION!
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Microservices
  api-gateway:
    build: ./api-gateway
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=development
      - TODO_SERVICE_URL=http://todo-service:3001
      - USER_SERVICE_URL=http://user-service:3002
      - NOTIFICATION_SERVICE_URL=http://notification-service:3003
      - FRONTEND_URL=http://localhost:3000
      - JWT_SECRET=your-super-secret-jwt-key # CHANGE IN PRODUCTION!
    depends_on:
      - todo-service
      - user-service
      - notification-service
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8080/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  todo-service:
    build: ./todo-service
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=todoapp
      - DB_USER=postgres
      - DB_PASSWORD=password # CHANGE IN PRODUCTION!
      - JWT_SECRET=your-super-secret-jwt-key # CHANGE IN PRODUCTION!
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:3001/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  user-service:
    build: ./user-service
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=todoapp
      - DB_USER=postgres
      - DB_PASSWORD=password # CHANGE IN PRODUCTION!
      - JWT_SECRET=your-super-secret-jwt-key # CHANGE IN PRODUCTION!
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:3002/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  notification-service:
    build: ./notification-service
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:3003/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build: ./frontend
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_URL=http://localhost:8080/api
    depends_on:
      - api-gateway

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    driver: bridge
